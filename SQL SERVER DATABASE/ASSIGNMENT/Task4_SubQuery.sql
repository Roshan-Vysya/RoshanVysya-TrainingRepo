-- 1. Write an SQL query to find out which customers have not placed any orders. 
SELECT C.FirstName, C.LastName 
FROM Customers AS C
LEFT JOIN Orders as O
ON C.CustomerID=O.CustomerID
WHERE O.OrderID IS NULL
--USING SUB QUERIES
SELECT FirstName, LastName FROM Customers WHERE CustomerID NOT IN (SELECT OrderID FROM Orders)


-- 2. Write an SQL query to find the total number of products available for sale.  
SELECT SUM(QuantityInStock) FROM Inventory AS TotalProducts
SELECT P.ProductName, I.QuantityInStock AS TotalNumberOfProducts
FROM Products AS P
INNER JOIN Inventory AS I
ON P.ProductID=I.ProductID
GROUP BY P.ProductName, I.QuantityInStock


-- 3. Write an SQL query to calculate the total revenue generated by TechShop.  
SELECT SUM(Revenue) AS TotalRevenue FROM (SELECT OD.Quantity * P.Price AS Revenue
FROM OrderDetails OD
JOIN Products P
ON OD.ProductID = P.ProductID) AS SubQuery

-- 4. Write an SQL query to calculate the average quantity ordered for products in a specific category.
ALTER TABLE Products ADD Category VARCHAR(50)
UPDATE Products SET Category='Electronics' 
SELECT AVG(OD.Quantity) as AverageQuantity, P.Category
FROM OrderDetails as OD
INNER JOIN Products as P
ON OD.ProductID=P.ProductID
GROUP BY P.Category


-- 5. Write an SQL query to calculate the total revenue generated by a specific customer. Allow users to input the customer ID as a parameter. 
SELECT C.FirstName,C.LastName,SUM(O.TotalAmount) AS TotalRevenue
FROM Customers C
JOIN Orders O 
ON C.CustomerID = O.CustomerID
WHERE C.CustomerID = 1002
GROUP BY C.FirstName, C.LastName;


-- 6. Write an SQL query to find the customers who have placed the most orders. List their names and the number of orders they've placed. 
SELECT C.FirstName, C.LastName, COUNT(O.OrderID) as NumberOfOrders
FROM Orders as O
INNER JOIN Customers as C
ON O.CustomerID=C.CustomerID
GROUP BY C.FirstName, C.LastName
ORDER BY NumberOfOrders DESC

-- 7. Write an SQL query to find the most popular product category, which is the one with the highest total quantity ordered across all orders.
SELECT TOP 1p.ProductID,p.ProductName,SUM(od.Quantity) AS TotalQuantityOrdered
FROM Products p
JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY p.ProductID, p.ProductName
ORDER BY TotalQuantityOrdered DESC;

-- 8. Write an SQL query to find the customer who has spent the most money (highest total revenue) on electronic gadgets. List their name and total spending. 
SELECT TOP 1 c.CustomerID,c.FirstName, c.LastName AS CustomerName,SUM(p.Price * od.Quantity) AS TotalSpending
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
WHERE p.Category = 'Electronic Gadgets'  
GROUP BY c.CustomerID, c.FirstName, c.LastName
ORDER BY TotalSpending DESC;

-- 9. Write an SQL query to calculate the average order value (total revenue divided by the number of orders) for all customers. 
SELECT 
    (SELECT SUM(TotalAmount) FROM Orders) / 
    (SELECT COUNT(OrderID) FROM Orders) AS AverageOrderValue;


--10. Write an SQL query to find the total number of orders placed by each customer and list their names along with the order count.
SELECT C.FirstName, C.LastName, (SELECT COUNT(*) FROM Orders AS O WHERE O.CustomerID = C.CustomerID) AS numberOfOrders FROM Customers AS C